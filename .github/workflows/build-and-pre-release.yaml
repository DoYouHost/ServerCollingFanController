name: Build and Pre-release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    name: Check if build should trigger
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Check commit message or PR title
        id: check
        run: |
          SHOULD_BUILD="false"

          # Check commit message for push events
          if [ "${{ github.event_name }}" = "push" ]; then
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            echo "Commit message: $COMMIT_MESSAGE"
            if [[ "$COMMIT_MESSAGE" =~ ^BUILD.* ]]; then
              SHOULD_BUILD="true"
              echo "✅ Commit message starts with BUILD"
            else
              echo "❌ Commit message does not start with BUILD"
            fi
          fi

          # Check PR title for pull request events
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_TITLE="${{ github.event.pull_request.title }}"
            echo "PR title: $PR_TITLE"
            if [[ "$PR_TITLE" =~ ^BUILD.* ]]; then
              SHOULD_BUILD="true"
              echo "✅ PR title starts with BUILD"
            else
              echo "❌ PR title does not start with BUILD"
            fi
          fi

          # Always build on manual trigger
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SHOULD_BUILD="true"
            echo "✅ Manual workflow trigger - building"
          fi

          echo "should-build=$SHOULD_BUILD" >> $GITHUB_OUTPUT
          echo "Final decision: should-build=$SHOULD_BUILD"

  generate-version:
    runs-on: ubuntu-latest
    needs: check-trigger
    if: needs.check-trigger.outputs.should-build == 'true'
    name: Generate Version
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Extract project version and generate incremental version
        id: version
        run: |
          # Extract project.version - improved regex to handle quotes properly
          BASE_VERSION=$(grep -A 3 "project:" serverCollingFanController.yaml | grep "version:" | sed 's/.*version:[[:space:]]*"\([^"]*\)".*/\1/')
          echo "Base project version: $BASE_VERSION"

          # Fetch tags
          git fetch --tags || true

          LATEST_TAG=$(git tag -l "$BASE_VERSION.*" | sort -V | tail -1 || echo "")

          LATEST_VERSION="$LATEST_TAG"

          if [ -z "$LATEST_VERSION" ]; then
            INCREMENTAL_VERSION="${BASE_VERSION}.0"
          else
            CURRENT_INCREMENT=$(echo "$LATEST_VERSION" | sed "s/${BASE_VERSION}\.//")
            NEXT_INCREMENT=$((CURRENT_INCREMENT + 1))
            INCREMENTAL_VERSION="${BASE_VERSION}.${NEXT_INCREMENT}"
          fi

          TAG="$INCREMENTAL_VERSION"
          echo "version=$INCREMENTAL_VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Base version: $BASE_VERSION"
          echo "Full version: $INCREMENTAL_VERSION"
          echo "Release tag: $TAG"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-firmware:
    name: Build Firmware
    needs: [check-trigger, generate-version]
    if: needs.check-trigger.outputs.should-build == 'true'
    uses: DoYouHost/workflows/.github/workflows/build.yml@main
    with:
      files: |
        serverCollingFanController.yaml
      esphome-version: "2025.7.5"
      combined-name: "ServerCoolingFanController"
      release-version: ${{ needs.generate-version.outputs.version }}
      release-summary: ${{ needs.generate-version.outputs.version }}
      release-url: "https://github.com/DoYouHost/ServerCollingFanController/releases/tag/${{ needs.generate-version.outputs.tag }}"

  debug-version:
    name: Debug Version
    needs: [generate-version]
    runs-on: ubuntu-latest
    steps:
      - name: Debug version values
        run: |
          echo "Generated version: ${{ needs.generate-version.outputs.version }}"
          echo "Generated tag: ${{ needs.generate-version.outputs.tag }}"

  upload-to-pre-release:
    name: Upload to Pre-Release
    uses: DoYouHost/workflows/.github/workflows/upload-to-gh-release.yml@main
    needs:
      - build-firmware
      - generate-version
    with:
      version: ${{ needs.generate-version.outputs.version }}
      prerelease: true

  upload-to-r2:
    name: Upload to R2
    uses: DoYouHost/workflows/.github/workflows/upload-to-r2.yml@main
    needs:
      - build-firmware
      - generate-version
    with:
      directory: serverCollingFanController
    secrets: inherit

  promote-to-beta:
    name: Promote to Beta
    uses: DoYouHost/workflows/.github/workflows/promote-r2.yml@main
    needs:
      - build-firmware
      - generate-version
      - upload-to-r2
    with:
      version: ${{ needs.generate-version.outputs.version }}
      directory: serverCollingFanController
      channel: beta
      manifest-filename: manifest-beta.json
    secrets: inherit
